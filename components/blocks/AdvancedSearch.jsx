"use client";

import { useState } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import { DateInput } from "@/components/ui/DateInput";
import { Input } from "@/components/ui/Input";
import { Select } from "@/components/ui/Select";
import { Button } from "@/components/ui/Button";
import { CHURCHES, PLACES } from "@/components/ui/ChurchPlaceSelect";

/**
 * Advanced Search –∑–∞ –≤–µ–Ω—á–∞–≤–∞—ö–∞
 * –ë—Ä–∑–æ –ø—Ä–µ–±–∞—Ä—É–≤–∞—ö–µ –ø–æ –∏–º–∏—ö–∞ + Date range + Advanced —Ñ–∏–ª—Ç—Ä–∏
 */
export function AdvancedSearch() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const [showAdvanced, setShowAdvanced] = useState(false);

  const [filters, setFilters] = useState({
    // –ë—Ä–∑–æ –ø—Ä–µ–±–∞—Ä—É–≤–∞—ö–µ - –∏–º–∏—ö–∞ –∏ –ø—Ä–µ–∑–∏–º–∏—ö–∞
    name: searchParams.get("name") || "",

    // Date range
    dateFrom: {
      day: searchParams.get("dateFromDay") || "",
      month: searchParams.get("dateFromMonth") || "",
      year: searchParams.get("dateFromYear") || "",
    },
    dateTo: {
      day: searchParams.get("dateToDay") || "",
      month: searchParams.get("dateToMonth") || "",
      year: searchParams.get("dateToYear") || "",
    },

    // –ù–∞–ø—Ä–µ–¥–Ω–æ –ø—Ä–µ–±–∞—Ä—É–≤–∞—ö–µ
    church: searchParams.get("church") || "",
    place: searchParams.get("place") || "",
    priest: searchParams.get("priest") || "",
    pageNumber: searchParams.get("pageNumber") || "",
  });

  const handleSearch = (e) => {
    e.preventDefault();

    const params = new URLSearchParams();

    // –î–æ–¥–∞—ò name –∞–∫–æ –∏–º–∞
    if (filters.name.trim()) {
      params.set("name", filters.name.trim());
    }

    // –î–æ–¥–∞—ò date range
    if (filters.dateFrom.year) {
      params.set("dateFromYear", filters.dateFrom.year);
      if (filters.dateFrom.month)
        params.set("dateFromMonth", filters.dateFrom.month);
      if (filters.dateFrom.day) params.set("dateFromDay", filters.dateFrom.day);
    }

    if (filters.dateTo.year) {
      params.set("dateToYear", filters.dateTo.year);
      if (filters.dateTo.month) params.set("dateToMonth", filters.dateTo.month);
      if (filters.dateTo.day) params.set("dateToDay", filters.dateTo.day);
    }

    // –î–æ–¥–∞—ò advanced —Ñ–∏–ª—Ç—Ä–∏
    if (filters.church) params.set("church", filters.church);
    if (filters.place) params.set("place", filters.place);
    if (filters.priest) params.set("priest", filters.priest);
    if (filters.pageNumber) params.set("pageNumber", filters.pageNumber);

    // Navigate
    const queryString = params.toString();
    router.push(queryString ? `/venchani?${queryString}` : "/venchani");
  };

  const handleClear = () => {
    setFilters({
      name: "",
      dateFrom: { day: "", month: "", year: "" },
      dateTo: { day: "", month: "", year: "" },
      church: "",
      place: "",
      priest: "",
      pageNumber: "",
    });
    router.push("/venchani");
  };

  const hasActiveFilters =
    filters.name ||
    filters.dateFrom.year ||
    filters.dateTo.year ||
    filters.church ||
    filters.place ||
    filters.priest ||
    filters.pageNumber;

  return (
    <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-4 sm:p-6">
      <form onSubmit={handleSearch} className="space-y-4">
        {/* –ë—Ä–∑–æ –ø—Ä–µ–±–∞—Ä—É–≤–∞—ö–µ –ø–æ –∏–º–µ/–ø—Ä–µ–∑–∏–º–µ */}
        <div>
          <Input
            label="–ü—Ä–µ–±–∞—Ä–∞—ò –ø–æ –∏–º–µ –∏–ª–∏ –ø—Ä–µ–∑–∏–º–µ"
            placeholder="–ê–ª–µ–∫—Å–∞–Ω–¥–∞—Ä, –ü–µ—Ç–∫–æ–≤—Å–∫–∏..."
            value={filters.name}
            onChange={(e) => setFilters({ ...filters, name: e.target.value })}
          />
        </div>

        {/* Date Range */}
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <DateInput
            label="–û–¥ –¥–∞—Ç—É–º"
            value={filters.dateFrom}
            onChange={(val) => setFilters({ ...filters, dateFrom: val })}
          />
          <DateInput
            label="–î–æ –¥–∞—Ç—É–º"
            value={filters.dateTo}
            onChange={(val) => setFilters({ ...filters, dateTo: val })}
          />
        </div>

        {/* Advanced Toggle */}
        <div>
          <button
            type="button"
            onClick={() => setShowAdvanced(!showAdvanced)}
            className="text-sm text-primary-600 dark:text-primary-400 hover:underline flex items-center gap-1"
          >
            {showAdvanced ? "‚ñº" : "‚ñ∂"} –ù–∞–ø—Ä–µ–¥–Ω–æ –ø—Ä–µ–±–∞—Ä—É–≤–∞—ö–µ
          </button>
        </div>

        {/* Advanced Filters */}
        {showAdvanced && (
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 pt-2 border-t border-gray-200 dark:border-gray-700">
            <Select
              label="–•—Ä–∞–º"
              value={filters.church}
              onChange={(val) => setFilters({ ...filters, church: val })}
              options={CHURCHES}
              allowCustom={true}
            />

            <Select
              label="–ú–µ—Å—Ç–æ"
              value={filters.place}
              onChange={(val) => setFilters({ ...filters, place: val })}
              options={PLACES}
              allowCustom={true}
            />

            <Input
              label="–°–≤–µ—à—Ç–µ–Ω–∏–∫"
              placeholder="–ò–º–µ –Ω–∞ —Å–≤–µ—à—Ç–µ–Ω–∏–∫..."
              value={filters.priest}
              onChange={(e) =>
                setFilters({ ...filters, priest: e.target.value })
              }
            />

            <Input
              label="–°—Ç—Ä–∞–Ω–∞ –æ–¥ –∫–Ω–∏–≥–∞"
              type="number"
              placeholder="–ë—Ä–æ—ò –Ω–∞ —Å—Ç—Ä–∞–Ω–∞..."
              value={filters.pageNumber}
              onChange={(e) =>
                setFilters({ ...filters, pageNumber: e.target.value })
              }
            />
          </div>
        )}

        {/* Buttons */}
        <div className="flex gap-3 pt-2">
          <Button type="submit" className="flex-1 sm:flex-none">
            üîç –ü—Ä–µ–±–∞—Ä–∞—ò
          </Button>
          {hasActiveFilters && (
            <Button
              type="button"
              variant="secondary"
              onClick={handleClear}
              className="flex-1 sm:flex-none"
            >
              –ò—Å—á–∏—Å—Ç–∏
            </Button>
          )}
        </div>

        {/* Active Filters Display */}
        {hasActiveFilters && (
          <div className="flex flex-wrap gap-2 pt-2 border-t border-gray-200 dark:border-gray-700">
            <span className="text-sm text-gray-600 dark:text-gray-400">
              –ê–∫—Ç–∏–≤–Ω–∏ —Ñ–∏–ª—Ç—Ä–∏:
            </span>
            {filters.name && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –ò–º–µ: {filters.name}
              </span>
            )}
            {filters.dateFrom.year && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –û–¥: {filters.dateFrom.day || "?"}/
                {filters.dateFrom.month || "?"}/{filters.dateFrom.year}
              </span>
            )}
            {filters.dateTo.year && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –î–æ: {filters.dateTo.day || "?"}/{filters.dateTo.month || "?"}/
                {filters.dateTo.year}
              </span>
            )}
            {filters.church && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –•—Ä–∞–º: {filters.church}
              </span>
            )}
            {filters.place && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –ú–µ—Å—Ç–æ: {filters.place}
              </span>
            )}
            {filters.priest && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –°–≤–µ—à—Ç–µ–Ω–∏–∫: {filters.priest}
              </span>
            )}
            {filters.pageNumber && (
              <span className="inline-flex items-center px-2 py-1 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm">
                –°—Ç—Ä–∞–Ω–∞: {filters.pageNumber}
              </span>
            )}
          </div>
        )}
      </form>
    </div>
  );
}
